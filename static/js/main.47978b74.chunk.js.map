{"version":3,"sources":["useWordGame.js","App.js","index.js"],"names":["useWordGame","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setTimeRunning","wordCount","setWordCount","makeFocus","useRef","useEffect","setTimeout","time","trim","split","filter","word","length","calculation","handleChange","e","value","target","startGame","current","disabled","focus","App","placeholder","onChange","ref","onClick","ReactDOM","render","document","getElementById"],"mappings":"gMAwDeA,MAtDf,WACE,IADqB,EAGGC,mBAAS,IAHZ,mBAGdC,EAHc,KAGRC,EAHQ,OAIqBF,mBAHpB,IADD,mBAIdG,EAJc,KAICC,EAJD,OAKmBJ,oBAAS,GAL5B,mBAKdK,EALc,KAKCC,EALD,OAMaN,mBAAS,GANtB,mBAMdO,EANc,KAMHC,EANG,KAOfC,EAAYC,iBAAO,MAoCzB,OAVAC,qBAAU,WACJN,GAAiBF,EAAgB,EACnCS,YAAW,WACTR,GAAiB,SAACS,GAAD,OAAUA,EAAO,OACjC,KACwB,IAAlBV,IATXG,GAAe,GACfE,EAhBF,SAAqBP,GAEnB,OADiBA,EAAKa,OAAOC,MAAM,KACnBC,QAAO,SAACC,GAAD,MAAmB,KAATA,KAAaC,OAcjCC,CAAYlB,OAWxB,CAACE,EAAeE,IAEZ,CACLe,aAnCF,SAAsBC,GAAI,IAChBC,EAAUD,EAAEE,OAAZD,MACRpB,EAAQoB,IAkCRrB,OACAI,gBACAI,YACAN,gBACAqB,UA9BF,WACElB,GAAe,GACfF,EApBoB,IAqBpBF,EAAQ,IACRM,EAAa,GACbC,EAAUgB,QAAQC,UAAW,EAC7BjB,EAAUgB,QAAQE,SAyBlBpB,cCnBWqB,MA7Bf,WAAgB,IAAD,EAST7B,IAPFqB,EAFW,EAEXA,aACAnB,EAHW,EAGXA,KACAI,EAJW,EAIXA,cACAI,EALW,EAKXA,UACAN,EANW,EAMXA,cACAqB,EAPW,EAOXA,UACAjB,EARW,EAQXA,UAEF,OACE,gCACE,mDACA,0BACEsB,YAAY,uBACZC,SAAUV,EACVE,MAAOrB,EACPyB,UAAWrB,EACX0B,IAAKtB,IAEP,kDAAqBN,KACrB,wBAAQ6B,QAASR,EAAWE,SAAUrB,EAAtC,mBAGA,8CAAiBE,EAAjB,WCxBN0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.47978b74.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction useWordGame() {\r\n  const STARTING_TIME = 10;\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [timeRemaining, setTimeRemaining] = useState(STARTING_TIME);\r\n  const [isTimeRunning, setTimeRunning] = useState(false);\r\n  const [wordCount, setWordCount] = useState(0);\r\n  const makeFocus = useRef(null);\r\n\r\n  function handleChange(e) {\r\n    const { value } = e.target;\r\n    setText(value);\r\n  }\r\n\r\n  function calculation(text) {\r\n    const wordsArr = text.trim().split(\" \");\r\n    return wordsArr.filter((word) => word !== \"\").length;\r\n  }\r\n\r\n  function startGame() {\r\n    setTimeRunning(true);\r\n    setTimeRemaining(STARTING_TIME);\r\n    setText(\"\");\r\n    setWordCount(0);\r\n    makeFocus.current.disabled = false;\r\n    makeFocus.current.focus();\r\n  }\r\n\r\n  function endGame() {\r\n    setTimeRunning(false);\r\n    setWordCount(calculation(text));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isTimeRunning && timeRemaining > 0) {\r\n      setTimeout(() => {\r\n        setTimeRemaining((time) => time - 1);\r\n      }, 1000);\r\n    } else if (timeRemaining === 0) {\r\n      endGame();\r\n    }\r\n  }, [timeRemaining, isTimeRunning]);\r\n\r\n  return {\r\n    handleChange,\r\n    text,\r\n    isTimeRunning,\r\n    makeFocus,\r\n    timeRemaining,\r\n    startGame,\r\n    wordCount,\r\n  };\r\n}\r\n\r\nexport default useWordGame;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./style.css\";\r\nimport useWordGame from \"./useWordGame\";\r\n\r\nfunction App() {\r\n  const {\r\n    handleChange,\r\n    text,\r\n    isTimeRunning,\r\n    makeFocus,\r\n    timeRemaining,\r\n    startGame,\r\n    wordCount,\r\n  } = useWordGame();\r\n  return (\r\n    <div>\r\n      <h1>Speed Typing Game</h1>\r\n      <textarea\r\n        placeholder=\"Start typing here...\"\r\n        onChange={handleChange}\r\n        value={text}\r\n        disabled={!isTimeRunning}\r\n        ref={makeFocus}\r\n      />\r\n      <h4>Time reminaing: {timeRemaining}</h4>\r\n      <button onClick={startGame} disabled={isTimeRunning}>\r\n        Start\r\n      </button>\r\n      <h1>Word count: {wordCount} </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}